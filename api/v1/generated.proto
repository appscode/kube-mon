/*
Copyright The Kmodules Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package kmodules.xyz.monitoring_agent_api.api.v1;

import "k8s.io/api/core/v1/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1";

message RelabelConfig {
  // The source labels select values from existing labels. Their content is concatenated
  // using the configured separator and matched against the configured regular expression
  // for the replace, keep, and drop actions.
  repeated string sourceLabels = 1;

  // Separator placed between concatenated source label values. default is ';'.
  optional string separator = 2;

  // Label to which the resulting value is written in a replace action.
  // It is mandatory for replace actions. Regex capture groups are available.
  optional string targetLabel = 3;

  // Regular expression against which the extracted value is matched. defailt is '(.*)'
  optional string regex = 4;

  // Modulus to take of the hash of the source label values.
  optional uint64 modulus = 5;

  // Replacement value against which a regex replace is performed if the
  // regular expression matches. Regex capture groups are available. Default is '$1'
  optional string replacement = 6;

  // Action to perform based on regex matching. Default is 'replace'
  optional string action = 7;
}

message AgentSpec {
  optional string agent = 1;

  optional PrometheusSpec prometheus = 2;

  // Arguments to the entrypoint.
  // The docker image's CMD is used if this is not provided.
  // Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
  // cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax
  // can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
  // regardless of whether the variable exists or not.
  // Cannot be updated.
  // More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  // +optional
  repeated string args = 3;

  // List of environment variables to set in the container.
  // Cannot be updated.
  // +optional
  // +patchMergeKey=name
  // +patchStrategy=merge
  repeated k8s.io.api.core.v1.EnvVar env = 4;

  // Compute Resources required by exporter container.
  // Cannot be updated.
  // More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  // +optional
  optional k8s.io.api.core.v1.ResourceRequirements resources = 5;

  // Security options the pod should run with.
  // More info: https://kubernetes.io/docs/concepts/policy/security-context/
  // More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  // +optional
  optional k8s.io.api.core.v1.SecurityContext securityContext = 6;
}

message PrometheusSpec {
  // Port number for the exporter side car.
  optional int32 port = 1;

  // Namespace of Prometheus. Service monitors will be created in this namespace.
  optional string namespace = 2;

  // Labels are key value pairs that is used to select Prometheus instance via ServiceMonitor labels.
  // +optional
  map<string, string> labels = 3;

  // Interval at which metrics should be scraped
  optional string interval = 4;

  // MetricRelabelings configuration of ServiceMonitor object.
  repeated RelabelConfig metricRelabelings = 5;

  // Relabelings configuration of ServiceMonitor object.
  repeated RelabelConfig relabelings = 6;
}

